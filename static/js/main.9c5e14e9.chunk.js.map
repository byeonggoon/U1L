{"version":3,"sources":["utils/ipfs.js","serviceWorker.js","components/Header.js","components/Footer.js","container/Home.js","modules/marketdata.js","components/filter/Latest.js","components/filter/Past.js","components/filter/Pending.js","components/filter/Bid.js","components/filter/Search.js","components/List.js","container/Market.js","getWeb3.js","modules/conn.js","components/Signin.js","components/Product.js","components/filter/My.js","container/Mypage.js","App.js","combine/root.js","index.js","modules/upload.js","container/Create.js","components/Createupload.js","utils/constants.js","images/ipfs-logo.png"],"names":["ipfs","require","IpfsHttpClient","host","port","protocol","Boolean","window","location","hostname","match","Header","$","scroll","scrollTop","addClass","removeClass","click","this","toggleClass","togleClass","className","to","src","href","Footer","class","Home","dispatch","useDispatch","useEffect","resetupload","settings","dots","infinite","speed","autoplay","autoplaySpeed","fade","pauseOnHover","arrows","reviews","eq","show","next","stop","slideDown","parent","siblings","children","slideUp","id","type","name","for","data-wow-delay","onclick","takemarketdata","waitmarketdata","pushdata","createAction","input","resetdata","filtermydata","spushdata","params","console","log","payload","ipfsdata","num","call","axios","JSON","data","words","put","takeEvery","marketdata","handleActions","state","produce","draft","push","filter","x","mydata","Latest","slice","reverse","map","user","image","Past","Pending","pending","typeprice","Bid","bid","Search","search","setchange","matchdata","indexOf","length","onClick","width","height","List","change","Market","useState","isOpen","setMenu","setsearch","conn","useSelector","init","setinit","history","useHistory","handleGet","a","shopInstance","getLength","i","getAllNFTs","alert","placeholder","value","onChange","e","target","getWeb3","Promise","resolve","reject","addEventListener","ethereum","web3","Web3","enable","provider","providers","HttpProvider","takeconn","takeinstance","waitconn","connweb","conninstance","sgetweb3","sgetinstance","results","contract","DeedIPFSContract","deedipfs","setProvider","currentProvider","eth","getAccounts","accounts","deployed","instance","myAccount","Signin","replace","Product","momo","pathname","split","compnum","Number","bidprice","setbidprice","onhandlebuy","price","transferFrom","from","utils","toWei","String","onhandlebid","initprice","description","time","endDate","My","my","ddel","dataset","burn","data-name","data-id","Mypage","App","path","exact","component","Create","rootsaga","persistConfig","key","storage","whitelist","rootreducer","combineReducers","upload","all","persistReducer","sagaMiddleware","createLogger","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","setfiles","setbuffer","setipfsMetaHash","setipfsHash","uploadreset","setflag","setmetaname","setmetadesc","setmetahash","setmetaprice","setmetatypeprice","pond","files","buffer","ipfsMetaHash","ipfsHash","imageUrl","flag","metaName","metaDesc","metaHash","metaprice","metatypeprice","registerPlugin","FilePondPluginImagePreview","test","useRef","readFile","current","file","props","reader","FileReader","readAsArrayBuffer","onloadend","fileToBuffer","Buffer","result","handleUpload","add","err","hash","handleMint","mint","ref","onupdatefiles","fileItems","fileItem","alt","onChangeIpfsMetaHash","removeFile","registerLocale","ko","Createupload","Date","setEndDate","handleUploadJson","nowTime","moment","format","desc","enddate","metaData","IPFS_URL","setHours","getHours","toLocaleString","stringify","locale","selected","closeOnScroll","minDate","maxDate","addDays","dateFormat","placeholderText","style","marginTop","marginBottom","module","exports"],"mappings":"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","file":"static/js/main.9c5e14e9.chunk.js","sourcesContent":["// import IPFSClient from 'ipfs-http-client';\r\n\r\n// const ipfs =new IPFSClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\r\n// import ipfsClient from 'ipfs-http-client';\r\n\r\n// const ipfs = ipfsClient({host: 'localhost:3000', port: '5001'});\r\n// const ipfs = ipfsClient('/ip4/127.0.0.1/tcp/5001')\r\n// import IPFSClient from 'ipfs-http-client';\r\nconst IpfsHttpClient = require(\"ipfs-http-client\");\r\nconst ipfs = IpfsHttpClient({\r\n    host: \"ipfs.infura.io\",\r\n    port: \"5001\",\r\n    protocol: \"https\",\r\n  });\r\n// const ipfs =  IPFSClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\r\n\r\nexport default ipfs;\r\n\r\n\r\n\r\n\r\n// const ipfsClient = require('ipfs-http-client')\r\n// console.log(\"여기만\",ipfsClient)\r\n// const ipfs = ipfsClient.create({host: 'ipfs.infura.io' , port:'5001', protocol : 'https'})\r\n// console.log(\"뭔데\",ipfs)\r\n// export default ipfs;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport $ from 'jquery';\r\nimport { BiUserCircle , BiWallet } from \"react-icons/bi\";\r\nimport {FaShopify} from \"react-icons/fa\";\r\nimport {GoDiffAdded} from \"react-icons/go\";\r\n\r\nfunction Header() {\r\n  $(window).scroll(function(){\r\n    if($(window).scrollTop() > 50){\r\n      $('.header , .btn-top').addClass('active')\r\n    }\r\n    else{\r\n      $('.header , .btn-top').removeClass('active')\r\n    }\r\n  })\r\n  // Header Trigger\r\n  $('.trigger').click(function(){\r\n    $(this).toggleClass('active');\r\n    $('.gnb').togleClass('active');\r\n  });\r\n\r\n  $('.gnb a, section').click(function(){\r\n    $('.gnb , .trigger').removeClass('active');\r\n  })\r\n  \r\n    return (\r\n      \r\n        <div className=\"header\">\r\n          \r\n          {/*header start */}\r\n          \r\n            <div className=\"header-inner\">\r\n              <div className=\"logo\">\r\n                <Link to=\"/\"><img src=\"/images/logo1.png\"></img></Link>\r\n              </div>\r\n              <div className='gnb'>\r\n                <Link to=\"/create\" ><GoDiffAdded className=\"gnb-1\"/></Link>\r\n                <Link to=\"/market\" ><FaShopify className=\"gnb-2\"/></Link>\r\n                <Link to=\"/my\" ><BiUserCircle className=\"gnb-3\"/></Link>\r\n                <Link to=\"/signin\" ><BiWallet className=\"gnb-4\"/></Link>\r\n              </div>\r\n            </div>\r\n            {/* <div className=\"trigger\"></div> */}\r\n          \r\n\r\n        {/* // <!-- Go to Top --> */}\r\n        <a href=\"#\" className=\"btn-top\"><i className=\"xi-angle-up-thin\"></i></a>\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport $ from 'jquery';\r\nimport Slider from \"react-slick\";\r\n// import WOW from 'wowjs';\r\n// import TypeIt from \"typeit-react\";\r\nimport HomePage from \"../css/homepage.css\";\r\nimport { BiUserCircle , BiWallet } from \"react-icons/bi\";\r\nimport {FaShopify} from \"react-icons/fa\";\r\nimport {GoDiffAdded} from \"react-icons/go\";\r\nimport Responsive from \"../css/responsive.css\";\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"footer-inner\">\r\n                <div className=\"footer-content\">\r\n                    <div className=\"footer-logo\">\r\n                        <img src=\"images/logo.png\"/>\r\n                    </div>\r\n                    <div className=\"copyright\">\r\n                        <div className=\"policy-sns\">\r\n                            <div className=\"policy\">\r\n                                <span>\r\n                                    <a href=\"#none\">개인정보취급방침</a>\r\n                                    <em>|</em>\r\n                                    <a href=\"#none\">이용약관</a>\r\n                                </span>\r\n                                <span>Copyright STARTUP MATE. All right reserved.</span>\r\n                            </div>\r\n                            <div className=\"sns\">\r\n                                <a href=\"#none\"><i class=\"xi-facebook-official\"></i></a>\r\n                                <a href=\"#none\"><i class=\"xi-instagram\"></i></a>\r\n                                <a href=\"#none\"><i class=\"xi-kakaostory\"></i></a>\r\n                                <a href=\"#none\"><i class=\"xi-naver-square\"></i></a>\r\n                                <a href=\"#none\"><i class=\"xi-youtube-play\"></i></a>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"address\">\r\n                            <span>(주)U1L | 대표자 : 김진우 | 사업자번호 : 123-5-67890 사업자 정보 확인 | 개인정보보호책임자 : 임병군 </span>\r\n                            <span>주소 : 서울시 서대문구 연희동 123-14 U1L 빌딩 2층 ㅣ 이메일: info@uil.com</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React,{useEffect}  from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport $ from 'jquery';\r\nimport Slider from \"react-slick\";\r\nimport WOW from 'wowjs';\r\nimport { useDispatch } from 'react-redux';\r\n//import TypeIt from \"typeit-react\";\r\nimport HomePage from \"../css/homepage.css\";\r\nimport { BiUserCircle , BiWallet } from \"react-icons/bi\";\r\nimport {FaShopify} from \"react-icons/fa\";\r\nimport {GoDiffAdded} from \"react-icons/go\";\r\nimport Responsive from \"../css/responsive.css\";\r\nimport {resetupload} from '../modules/upload';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\n\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nfunction Home() {\r\n\r\n    const dispatch=useDispatch();\r\n    useEffect(() => {\r\n        dispatch(resetupload());\r\n    }, [])\r\n\r\n\r\n  var settings = {\r\n    dots: false,\r\n    infinite: true,\r\n    speed: 1000,\r\n    autoplay: true,\r\n    autoplaySpeed: 2000,\r\n    fade: true,\r\n    pauseOnHover: false,\r\n    arrows: false,\r\n  };\r\n  var reviews = {\r\n    dots: true,\r\n    infinite: true,\r\n    autoplay: true,\r\n    autoplaySpeed: 2000,\r\n  };\r\n\r\n\r\n//   $(window).scroll(function(){\r\n//     if($(window).scrollTop() > 50){\r\n//       $('header , .btn-top').addClass('active')\r\n//     }\r\n//     else{\r\n//       $('header , .btn-top').removeClass('active')\r\n//     }\r\n//   })\r\n//   // Header Trigger\r\n//   $('.trigger').click(function(){\r\n//     $(this).toggleClass('active');\r\n//     $('.gnb').togleClass('active');\r\n//   });\r\n\r\n//   $('.gnb a, section').click(function(){\r\n//     $('.gnb , .trigger').removeClass('active');\r\n//   })\r\n  \r\n  \r\n  // Faq Accordion\r\n  $('.faq-desc').eq(0).show();\r\n  $('.faq-title').click(function(){\r\n    $(this).next().stop().slideDown();\r\n    $(this).parent().siblings().children('.faq-desc').stop().slideUp();\r\n    $(this).parent().addClass('active');\r\n    $(this).parent().siblings().removeClass('active');\r\n  }) \r\n\r\n    return (\r\n      \r\n        <div className=\"container\">\r\n          <Header/>\r\n          {/*welcome start */}\r\n\r\n          <section className=\"welcome\">\r\n            <div className=\"slideshow\">\r\n              <Slider {...settings}>\r\n\r\n              <img src=\"/images/slide-welcome-01.png\"/>\r\n              <img src=\"/images/slide-welcome-02.png\"/>\r\n              <img src=\"/images/slide-welcome-03.png\"/>\r\n              </Slider>\r\n            </div>\r\n            <div className=\"welcome-heading\">\r\n              <span>\r\n                \r\n              </span>\r\n              <h1>\r\n                국내 유일 NFT 마켓<br></br>U1L\r\n                {/* <em id=\"typing\"></em> */}\r\n                {/* <em id=\"typing\"><TypeIt\r\n                  options={{\r\n                    strings: [\"Business strategy.\", \"The Value in Blockchain\", \"Creative Idea.\"], // 타이핑 텍스트 입력\r\n                    speed: 100, // 알파벳 타이핑 속도\r\n                    autoStart: true, // 자동 재생 사용\r\n                    breakLines: false, // 줄 바꿈 사용안함\r\n                   }}\r\n                /></em> */}\r\n              </h1>\r\n              <p>\r\n                dApp based on Ethereum Network\r\n              </p>\r\n              <div className=\"welcome-btns\">\r\n                <Link to=\"/Create\" className=\"btn start\">Create NFT</Link>\r\n                <Link to=\"/Market\" className=\"btn guide\">Go to Market</Link>\r\n              </div>\r\n            </div>\r\n            <div className=\"mause\">\r\n              <span className=\"wheele\"></span>\r\n            </div>\r\n          </section>\r\n\r\n          {/*ceo-access start */}\r\n          <section className=\"ceo-access\" id=\"feature1\">\r\n            <div className=\"ceo-inner\">\r\n                <div className=\"ceo-content\">\r\n                    <div className=\"ceo-left ltr wow\">\r\n                        <img src=\"/images/quotation-mark.png\"/>\r\n                        <h3>3 Pre-made Solutions for your Startup Business</h3>\r\n                        <p>창의적인 아이디어를 가장 빠르게 창출할 수 있는 최고의 앱 솔루션을 제공합니다. 여러분의 스타트업을 더욱 성장시키기 위해 온 힘을 다할 것이며 U1L 라는 이름답게 항상 동반자가 되겠습니다. 감사합니다.                        </p>\r\n                        <span>임병군 - U1L 대표이사</span>\r\n                    </div>\r\n                    <div className=\"ceo-right rtl wow\">\r\n                        <div className=\"ceo-msg\">\r\n                            <h3>Application Downloads<big>30,000+</big></h3>\r\n                            <p>U1L은 앱 다운로드 30,000명 이상의 앱 사용자의 충분한 피드백을 통해 검증된 서비스를 제공합니다.</p>\r\n                        </div>\r\n                        <div className=\"ceo-photo\">\r\n                            <img src=\"/images/ceo-photo.jpg\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"access-inner\">\r\n                <div className=\"access-content\">\r\n                    <div className=\"access-left\">\r\n                        <h2>내 소중한 작품 이제 온라인으로 판매하자!</h2>\r\n                        <p>언제나 어디서나. 즐겁고 편리한 액세스가 가능합니다.\r\n                            회원 가입은 쉽고 간단합니다. 온라인 지갑 메타마스크 가입 후 연동하시면 U1L만의 다양한 작품들을 만나실 수 있습니다.</p>\r\n                        <div className=\"btn-download\">\r\n                            <a href=\"#none\"><img src=\"images/btn-appstore.png\"/></a>\r\n                            <a href=\"#none\"><img src=\"images/btn-playstore.png\"/></a>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"access-right\">\r\n                        <img src=\"/images/access.png\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n        \r\n        {/* <!-- banner Start --> */}\r\n        <section className=\"banner\">\r\n            <div className=\"banner-inner\">\r\n                <div className=\"banner-content\">\r\n                  \r\n                    <input type=\"radio\" name=\"tabmenu\" id=\"tab1\"/>\r\n                    <input type=\"radio\" name=\"tabmenu\" id=\"tab2\"/>\r\n                    <input type=\"radio\" name=\"tabmenu\" id=\"tab3\"/>\r\n                    <div className=\"tab-btn\">\r\n                        <label for=\"tab1\">\r\n                            <em><img src=\"/images/banner-icon-01.png\"/></em>\r\n                            <span>CEO를 위한 경영 전략을 위한 더 쉽은 방법</span>\r\n                        </label>\r\n                        <label for=\"tab2\">\r\n                            <em><img src=\"/images/banner-icon-02.png\"/></em>\r\n                            <span>개선된 검색 필터로 효율적인 전략 수립</span>    \r\n                        </label>\r\n                        <label for=\"tab3\" class=\"tab3\">\r\n                            <em><img src=\"/images/banner-icon-03.png\"/></em>\r\n                            <span>CEO 오프라인 커뮤니티 활동 지원</span>\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"tabs\">\r\n                        <div className=\"tab tab1\">\r\n                            <h2>Fast management strategy</h2>\r\n                            <p>어떤 상황에서든 기업의 리더는 불황기 생존 방안은 물론이고 미래에 성장할 수 있는 전략을 반드시 찾아야 합니다.</p>\r\n                        </div>\r\n                        <div className=\"tab tab2\">\r\n                            <h2>Efficient search filter</h2>\r\n                            <p>스타트업 메이트는 비즈니스 모델 캔버스를 통해 가장 효율적인 경영전략 수립 방안을 스타트업 CEO에게 제시합니다.</p>  \r\n                        </div>\r\n                        <div className=\"tab tab3\">\r\n                            <h2>CEO Community Activities</h2>\r\n                            <p>기업이 디지털과 물리적인 요소를 통합하여 비즈니스 모델을 변화시키는 새로운 방향을 정립하기 위한 오프라인 활동을 지원합니다.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n        {/* <!-- faq Start --> */}\r\n        <section className=\"faq\" id=\"feature4\">\r\n            <div className=\"faq-inner\">\r\n                <div className=\"headline-share\">\r\n                    <h1>서비스 이용이 궁금하신가요?</h1>\r\n                    <p>스타트업메이트가 도와드리겠습니다.</p>\r\n                </div>\r\n                <div className=\"faq-content\">\r\n                    <div className=\"faq-accordion ltr wow\">\r\n                        <div className=\"faq-item active\">\r\n                            <div className=\"faq-title\">스타트업 메이트 회원가입이 필수인가요?</div>\r\n                            <div className=\"faq-desc\">네. 회원가입은 필수입니다. <br/> \r\n                                스타트업 메이트 회원가입은 만 20세 이상 누구나 가입하실 수 있으며,\r\n                                스타트업 메이트 앱 서비스를 이용하시기 위해서 회원가입은 필수입니다. <br/><br/>\r\n                                스타트업 메이트 회원가입은 앱을 통해서 가입하실 수 있습니다. <br/>\r\n                                가입 절차는 아래와 같습니다. <br/><br/>\r\n                                ① 약관동의{\"(서비스이용약관, 개인정보 취급방침)\"} <br/>\r\n                                ② 기본정보 입력{\"(아이디, 이름, 비밀번호, 이메일, 휴대전화, 사업자 주소)\"}</div>\r\n                        </div>\r\n                        <div className=\"faq-item\">\r\n                            <div className=\"faq-title\">회원가입 시 주민등록번호가 포함되나요?</div>\r\n                            <div className=\"faq-desc\">스타트업 메이트 회원가입 시 주민등록번호는 입력받지 않습니다. <br/>\r\n                                회원가입을 위한 최소한의 정보만으로 회원가입이 완료됩니다. <br/>\r\n                                입력된 회원 정보는 스타트업 메이트 보안 시스템을 통해 안전하게 보호되며 법령에서 정하는 바에 최소한의 기간 동안 보관 후 모두 삭제되며, 고객 정보 보호에 최선을 다하고 있습니다.</div>\r\n                        </div>\r\n                        <div className=\"faq-item\">\r\n                            <div className=\"faq-title\">개인정보 관리를 어떻게 하시나요?</div>\r\n                            <div className=\"faq-desc\">스타트업 메이트는 서비스 제공을 위해 회원의 개인정보를 최소화 하여 수집하며, 수집된 정보는 ＇개인정보 취급방침＇에 따라 엄격히 관리됩니다.\r\n\r\n                                스타트업 메이트는 고객님의 개인정보를 소중하게 생각하며 서비스를 이용하시는 고객님의 개인정보 보호를 위해 관련 법령에서 규정하고 있는 개인정보보호 규정을 철저히 준수합니다. 개인정보보호와 관련한 자세한 내용은 '개인정보 취급방침'을 참고해주시기 바랍니다.</div>\r\n                        </div>\r\n                        <div className=\"faq-item\">\r\n                            <div className=\"faq-title\">회원정보를 변경하고 싶은데 어떻게 하나요?</div>\r\n                            <div className=\"faq-desc\">스타트업 메이트 회원정보를 변경하기 위해서 로그인 후 [회원정보]에서 회원정보를 조회하거나 변경하실 수 있습니다.\r\n                                회원정보 변경 방법은 아래와 같습니다. (단, 아이디는 수정하실 수 없습니다.)\r\n                                <br/><br/>\r\n                                ① [회원정보] 페이지 {'>'} 현재 사용중인 비밀번호 입력 <br/>\r\n                                ② [정보수정] 버튼을 클릭합니다.</div>\r\n                        </div>\r\n                        <div className=\"faq-item\">\r\n                            <div className=\"faq-title\">회원탈퇴 후 같은 아이디로 재가입 가능한가요?</div>\r\n                            <div className=\"faq-desc\">스타트업메이트 회원 탈퇴를 원하시나요?\r\n                                동일 아이디는 스타트업 메이트 회원 정책에 따라 재가입이 일정 기간 불가합니다. <br/> 회원 탈퇴 시 기존 회원 정보를 포함한 모든 정보가 복구 불가능합니다. <br/>\r\n                                탈퇴 시 이 점을 다시 한번 고려하신 후 진행해 주세요.\r\n                                항상 최선을 다하는 스타트업메이트가 되겠습니다. 감사합니다.</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"awards-content rtl wow\">\r\n                        <div className=\"award-image\">\r\n                            <img src=\"/images/faq-01.png\"/>\r\n                        </div>\r\n                        <h2>Great apps win awards</h2>\r\n                        <p>웹 및 모바일 개발자가 이끄는 Great apps win awards는 새로운 모바일 앱을 대중에게 주목을 받는 역할을 수행한 앱(App)에 수여됩니다.</p>\r\n                        <a href=\"#none\" class=\"btn-awards\">view the awards</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </section>   \r\n\r\n        {/* <!-- review Start --> */}\r\n\r\n        <section className=\"review\">\r\n      <div className=\"review-inner\">\r\n        <div className=\"headline-share\">\r\n          <h1>VIP들의 생생 리뷰</h1>\r\n          <p>U1L market review</p>\r\n        </div>\r\n        <div className=\"review-content\" id=\"feature5\">\r\n          <h1 className=\"slogan\">한국 최대의 NFT 거래소, 유일한 당신의 NFT, U1L</h1>\r\n          <Slider {...reviews}>\r\n            <div>\r\n              <p>\r\n                스타트업 창업 후 조직관리에 관한 내용이 잘 만들어져 있어서 많은 도움이 됩니다. U1L의 CEO를 위한 특별한 서비스들 너무 좋습니다. CEO로서 U1L의 기본적인 가이드만 참고해도 원하는 방향으로 조직관리할 수 있을 것 같습니다. 조직관리의 시작을 명확하게 하고, 완성도를 높일 수 있어서 좋습니다.\r\n              </p>\r\n              <p>\r\n                <span>임병군 대표</span>\r\n                U1L 대표이사\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <p>\r\n                경영전략을 어떻게 기획해야 하는지 도무지 엄두가 나지 않았는데 U1L 앱을 통해서 그런 고민 해결이 많이 되었습니다. 안전성과 전문성이 검증된 U1L의 CEO 경영전략 서비스 추천해 드립니다.\r\n                철저한 단계별 검증을 통해 새니기 CEO에게 경영전략 실패에 대한 위험부담을 낮출 수 있을 것 같습니다. 감사합니다.\r\n              </p>\r\n              <p>\r\n                <span>김진우 대표</span>\r\n                U1L 웹 에이전시 CEO\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <p>\r\n                처음 시작하는 CEO라서 전략기획이 뭔지 조직관리가 뭔지 정말 막막했습니다. 컨설팅도 합리적인 비용으로 해주기 때문에 이런 부분에 대한 고민해결도 충분히 되었습니다. U1L와 같은 CEO만을 위한 앱 서비스가 없어서 비교가 어렵겠지만 저는 정말 만족합니다. 번창하시길 기원합니다. 저도 화이팅~ U1L도 화이팅입니다.\r\n              </p>\r\n              <p>\r\n                <span>박현우 총괄</span>\r\n                U1L 개발 총괄\r\n              </p>\r\n            </div>\r\n            <div>\r\n                <p>\r\n                  처음 시작하는 CEO라서 전략기획이 뭔지 조직관리가 뭔지 정말 막막했습니다. 컨설팅도 합리적인 비용으로 해주기 때문에 이런 부분에 대한 고민해결도 충분히 되었습니다. U1L와 같은 CEO만을 위한 앱 서비스가 없어서 비교가 어렵겠지만 저는 정말 만족합니다. 번창하시길 기원합니다. 저도 화이팅~ U1L도 화이팅입니다.\r\n                </p>\r\n                <p>\r\n                  <span>제정원 팀장</span>\r\n                  U1L 영업 총괄\r\n                </p>\r\n              </div>\r\n            </Slider>\r\n        </div>\r\n      </div>\r\n    </section>          \r\n    {/* <!-- focus Start --> */}\r\n        <section className=\"focus\" id=\"feature6\">\r\n            <div className=\"focus-inner\">\r\n                <div className=\"headline-share\">\r\n                    <h1>국내 최대 및 유일 NFT 마켓</h1>\r\n                </div>\r\n                <div className=\"focus-content\">\r\n                    <div className=\"focus-item utd wow\" data-wow-delay='0'>\r\n                        <img src=\"images/focus-icon-01.png\"/>\r\n                        <h3>공들여 만든 내 작품 자랑!</h3>\r\n                        <i className=\"xi-checkbox-blank\"></i>\r\n                        <p>경영, 트렌드, 리더십, 인문 분야 등 어려운 경영 전략을 키워줄 온라인 콘테츠를 제공합니다.</p>\r\n                    </div>\r\n                    <div className=\"focus-item utd wow\" data-wow-delay='0.25s'>\r\n                        <img src=\"images/focus-icon-02.png\"/>\r\n                        <h3>다른 사람 작품도 구경!</h3>\r\n                        <i class=\"xi-checkbox-blank\"></i>\r\n                        <p>카테고리 별로 혹은 모임 검색을 통해 원하는 모임을 쉽고 빠르게 찾을 수 있습니다.</p>\r\n                    </div>\r\n                    <div className=\"focus-item utd wow\" data-wow-delay='0.5s'>\r\n                        <img src=\"images/focus-icon-03.png\"/>\r\n                        <h3>원하는 가격에! 경매로 싸게!</h3>\r\n                        <i class=\"xi-checkbox-blank\"></i>\r\n                        <p>처음 시작하는 경영을 위해 고민 되는 부분을 다른 CEO들과 오프라인 모임에서 함께 하세요.</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n        {/* <!-- news Start --> */}\r\n        <section className=\"news\" id=\"feature7\">\r\n            <div className=\"news-inner\">\r\n                <div className=\"headline-share\">\r\n                    <h1>U1L 갤러리 미리보기</h1>\r\n                </div>\r\n                <div className=\"news-content\">\r\n                    <div className=\"news-left ltr wow\">\r\n                        <div className=\"news-big\" onclick=\"location.href='https://www.naver.com/'\">\r\n                            {/* <!-- 새 탭에서 링크 열기 onclick=\"window.open('https://www.naver.com/','_blank')\" --> */}\r\n                            <img src=\"images/artwork_regular.jpg\"/>\r\n                            <div className=\"news-headline\">\r\n                                <h2>국내 최대 NFT Market<br></br> U1L</h2>\r\n                                <p>\r\n                                    자신의 작품을 U1L에 올려서 얼른 자랑해보세요!\r\n                                    <small class=\"date\">Dec 24, 2021</small>\r\n                                </p>\r\n                                <a href=\"#none\" class=\"btn-view\">자세히 보기</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"news-right rtl wow\">\r\n                        <div className=\"news-items\">\r\n                            <div className=\"news-thum\" onclick=\"location.href='https://www.naver.com/'\">\r\n                                <div class=\"news-photo\">\r\n                                    <img src=\"images/artwork_19.jpg\"/>\r\n                                    <span class=\"badge new\">new issue</span>\r\n                                </div>\r\n                                <p>\r\n                                    ✨방금 막 올라온 작품 구경하기✨\r\n                                </p>\r\n                                <small className=\"date\">Aug 11, 2021</small>\r\n                            </div>\r\n                            <div className=\"news-thum\" onclick=\"location.href='https://www.naver.com/'\">\r\n                                <div className=\"news-photo\">\r\n                                    <img src=\"images/artwork_22.jpg\"/>\r\n                                    <span className=\"badge new\">new issue</span>\r\n                                </div>\r\n                                <p>\r\n                                    ✨방금 막 올라온 작품 구경하기✨\r\n                                </p>\r\n                                <small className=\"date\">Aug 11, 2021</small>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"news-items\">\r\n                            <div className=\"news-thum\" onclick=\"location.href='https://www.naver.com/'\">\r\n                                <div className=\"news-photo\">\r\n                                    <img src=\"images/artwork_17.jpg\"/>\r\n                                    <span className=\"badge hot\">hot issue</span>\r\n                                </div>\r\n                                <p>\r\n                                    🎇가장 핫한 작품 구경하기🎇\r\n                                </p>\r\n                                <small className=\"date\">Aug 11, 2021</small>\r\n                            </div>\r\n                            <div className=\"news-thum\" onclick=\"location.href='https://www.naver.com/'\">\r\n                                <div className=\"news-photo\">\r\n                                    <img src=\"images/artwork_21.jpg\"/>\r\n                                    <span className=\"badge hot\">hot issue</span>\r\n                                </div>\r\n                                <p>\r\n                                🎇가장 핫한 작품 구경하기🎇\r\n                                </p>\r\n                                <small className=\"date\">Aug 11, 2021</small>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <a href=\"#none\" className=\"btn-readmore\">read more news</a>\r\n            </div>\r\n        </section>\r\n        {/* <!-- footer Start --> */}\r\n        <Footer/>\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import { createAction,handleActions } from \"redux-actions\";\r\nimport {put,call,takeEvery} from\"@redux-saga/core/effects\";\r\nimport produce from \"immer\";\r\nimport axios from \"axios\";\r\n\r\nconst PUSHDATA= \"marketdata/PUSHDATA\";\r\nconst RESETDATA= \"marketdata/RESETDATA\";\r\nconst FILTERMYDATA=\"marketdata/FILTERMYDATA\";\r\n\r\nexport const pushdata=createAction(PUSHDATA,(input)=>input);\r\nexport const resetdata=createAction(RESETDATA,(input)=>input);\r\nexport const filtermydata=createAction(FILTERMYDATA,(input)=>input);\r\n\r\nconst SPUSHDATA= \"markgetdata/SPUSHDATA\";\r\n\r\nexport const spushdata=createAction(SPUSHDATA,(input)=>input);\r\n\r\nfunction* takemarketdata(params){\r\nconsole.log(\"please\",params.payload.ipfsdata)\r\n  console.log(params.payload.ipfsdata[1])\r\n  console.log(\"넘\",params.payload.num)\r\n    const {data}=yield call([axios,'get'],`https://gateway.ipfs.io/ipfs/${params.payload.ipfsdata[1]}`,JSON);\r\n    console.log(\"이거\",data);\r\n    data.num=params.payload.ipfsdata[0].words[0];\r\n    yield put(pushdata(data));\r\n\r\n  }\r\n\r\n  export function* waitmarketdata(){\r\n    yield takeEvery(SPUSHDATA,takemarketdata);\r\n  }\r\n\r\nconst initialState={\r\n    data:[],\r\n    mydata:[],\r\n}\r\n\r\nconst marketdata=handleActions({\r\n    [PUSHDATA]:(state,{payload:input})=>\r\n    produce(state,(draft)=>{\r\n        draft.data.push(input);\r\n    }),\r\n    [RESETDATA]:(state,{payload:input})=>\r\n    produce(state,(draft)=>{\r\n        draft.data=[];\r\n    }),\r\n    [FILTERMYDATA]:(state,{payload:input})=>\r\n    produce(state,(draft)=>{\r\n        draft.data=draft.data.filter(x=>x.num!=input)\r\n    }),\r\n\r\n    \r\n  \r\n},initialState)\r\n\r\nexport default marketdata;","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nfunction Latest({data}) {\r\n\r\n   return(\r\n    <div>\r\n        {data.data.slice().reverse().map(x=>{\r\n                return(\r\n                    <div className=\"market-items-inner\">\r\n                    \r\n                 <Link to={`/product/${x.user}/${x.num}`}><p className=\"market-items-title\">{x.name}</p><img src={x.image}></img></Link>\r\n                  </div>\r\n                )\r\n            })}\r\n    </div>\r\n   )\r\n}\r\n\r\nexport default Latest\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nfunction Past({data}) {\r\n    return (\r\n        <div>\r\n                  {data.data.map(x=>{\r\n                return(\r\n                    <div className=\"market-items-inner\">\r\n                 <Link to={`/product/${x.user}/${x.num}`}><p className=\"market-items-title\">{x.name}</p><img src={x.image}\r\n                 ></img></Link>\r\n                  </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Past\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nfunction Pending({data}) {\r\n    const pending=data.data.filter(x=>x.typeprice==false);\r\n\r\n    return (\r\n        <div>\r\n            {pending.map(x=>{\r\n                return(\r\n                    <div className=\"market-items-inner\">\r\n                    \r\n                    <Link to={`/product/${x.user}/${x.num}`}><p className=\"market-items-title\">{x.name}</p><img src={x.image}></img></Link>\r\n                     </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pending\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nfunction Bid({data}) {\r\n    const bid=data.data.filter(x=>x.typeprice==true);\r\n    return (\r\n        <div>\r\n              {bid.map(x=>{\r\n                return(\r\n                    <div className=\"market-items-inner\">\r\n                    <Link to={`/product/${x.user}/${x.num}`}><p className=\"market-items-title\">{x.name}</p><img src={x.image}></img></Link>\r\n                  </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Bid\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Search({data,search,setchange}) {\r\n    const matchdata=data.data.filter(x=>x.name.indexOf(search)!=-1);\r\n    console.log(matchdata.length)\r\n    return (\r\n        <div className=\"empty-inner\">\r\n        {matchdata.length==0?\r\n         <div className=\"empty-box\">\r\n             <p> No items found for this search</p>\r\n             <img src=\"./images/empty-search.jpg\"></img>\r\n             <h3><button onClick={()=>{setchange(0)}}>Back</button></h3>\r\n         </div>\r\n        :\r\n        matchdata.map(x=>{\r\n            return(\r\n                <div>\r\n                <div>{x.name}</div>\r\n             <Link to={`/product/${x.user}/${x.num}`}><img src={x.image} width=\"300px\" height=\"300px\"></img></Link>\r\n              </div>\r\n            )\r\n        })\r\n        \r\n        }\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React,{useState} from 'react'\r\n\r\nimport Latest from './filter/Latest'\r\nimport Past from './filter/Past'\r\nimport Pending from './filter/Pending';\r\nimport Bid from './filter/Bid';\r\nimport Search from './filter/Search';\r\n\r\nfunction List({data,change,search,setchange}) {\r\n     //0->최신순\r\n     //1->등록순\r\n     //2->지정가\r\n     //3->경매가\r\n     if (change==0){\r\n        return(\r\n            <div>\r\n          \r\n            <Latest data={data}></Latest>\r\n            </div>\r\n       );\r\n    }\r\n    else if(change==1){\r\n        return( \r\n            <div>\r\n   \r\n            <Past data={data}></Past>\r\n            </div>\r\n        )\r\n    }\r\n    else if(change==2){\r\n        return (\r\n            <div>\r\n        \r\n            <Pending data={data}></Pending>\r\n            </div>\r\n      );\r\n    }\r\n    else if(change==3){\r\n        return(\r\n            <div>\r\n\r\n            <Bid data={data}></Bid>\r\n            </div>\r\n      );\r\n    }\r\n    else if(change==4){\r\n        return(\r\n            <div>\r\n\r\n            <Search data={data} search={search} setchange={setchange}></Search>\r\n            </div>\r\n      );\r\n    }\r\n\r\n}\r\n\r\nexport default List\r\n","import React,{useEffect,useState} from 'react'\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport {spushdata,resetdata} from \"../modules/marketdata\"\r\nimport ipfs from '../utils/ipfs';\r\nimport List from '../components/List';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {BiSearchAlt} from \"react-icons/bi\"\r\nimport Header from '../components/Header';\r\nimport marketcss from '../css/market.css'\r\nimport $ from 'jquery';\r\n// import 'bootstrap';\r\n\r\nfunction Market() {\r\n\r\n      // sort by menu function\r\n  const [isOpen, setMenu] = useState(false);\r\n  const toggleMenu = () => {\r\n    setMenu(isOpen => !isOpen); // on,off 개념 boolean\r\n}\r\n\r\n\r\n    const [change,setchange]=useState(0);\r\n    const [search,setsearch]=useState(\"\");\r\n    const dispatch=useDispatch();\r\n    const conn = useSelector(state => state.conn);\r\n    const data = useSelector(state => state.marketdata);\r\n    const [init,setinit]=useState(false);\r\n    const history = useHistory();\r\n\r\n\r\n    const handleGet = async() => {\r\n        const length = await conn.shopInstance.getLength();\r\n        console.log(length);\r\n        if(length>0){\r\n            setinit(false);\r\n            for(let i = 0; i < length; i++){\r\n                const ipfsdata = await conn.shopInstance.getAllNFTs(i);\r\n                dispatch(spushdata({ipfsdata:ipfsdata,num:i}));\r\n                \r\n            }\r\n        }\r\n       else{\r\n        setinit(true);\r\n       }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(conn.shopInstance==null){\r\n            alert(\"로그인후 사용가능!\")\r\n            history.push(\"/signin\");\r\n        }\r\n        else{\r\n            dispatch(resetdata());\r\n            handleGet();\r\n        }\r\n     \r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n             {\r\n                init==false?  \r\n                <div className=\"market-container\">\r\n                <Header/>\r\n                <section className=\"market\">\r\n                  <div className=\"market-inner\">\r\n                    <div className=\"market-search\">\r\n                      <input type=\"text\" placeholder=\"search...\" value={search} onChange={(e)=>{setsearch(e.target.value)}}></input>\r\n                      <button className=\"search-icon\" onClick={()=>{setchange(4)}}><BiSearchAlt/></button>\r\n                      <span className=\"market-tools-trigger\" onClick={toggleMenu}>Sort By</span>\r\n                      <div className={isOpen ? \"show-tools\" : \"hide-tools\"}>\r\n                        <button onClick={()=>{setchange(0)}}>Recently</button>\r\n                        <button onClick={()=>{setchange(1)}}>Oldest</button>\r\n                        <button onClick={()=>{setchange(2)}}>Fixed Price Only</button>\r\n                        <button onClick={()=>{setchange(3)}}>Oction Price Only</button>\r\n                      </div>\r\n                    </div>\r\n                    <List data={data} change={change} search={search} setchange={setchange}></List>\r\n                  </div>\r\n               </section>\r\n              </div>\r\n             : <div className=\"market-container\">\r\n             <Header/>\r\n             <section className=\"market\">\r\n                <div className=\"empty-inner\">\r\n                    <div className=\"empty-box\">\r\n                        <p>아직 아무것도 등록되지 않았어요</p>\r\n                        <img src=\"/images/artwork_1.jpg\"></img>\r\n                        <h3><button onClick={()=>{setchange(0)}}>Back</button></h3>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n             </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Market\r\n","import Web3 from \"web3\";\r\n\r\nconst getWeb3 = () =>\r\n  new Promise((resolve, reject) => {\r\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\r\n    window.addEventListener(\"load\", async () => {\r\n      // Modern dapp browsers...\r\n      if (window.ethereum) {\r\n        const web3 = new Web3(window.ethereum);\r\n        try {\r\n          // Request account access if needed\r\n          await window.ethereum.enable();\r\n          // Accounts now exposed\r\n          resolve(web3);\r\n        } catch (error) {\r\n          reject(error);\r\n        }\r\n      }\r\n      // Legacy dapp browsers...\r\n      else if (window.web3) {\r\n        // Use Mist/MetaMask's provider.\r\n        const web3 = window.web3;\r\n        console.log(\"Injected web3 detected.\");\r\n        resolve(web3);\r\n      }\r\n      // Fallback to localhost; use dev console port by default...\r\n      else {\r\n        const provider = new Web3.providers.HttpProvider(\r\n          \"http://127.0.0.1:8545\"\r\n        );\r\n        const web3 = new Web3(provider);\r\n        console.log(\"No web3 instance injected, using Local web3.\");\r\n        resolve(web3);\r\n      }\r\n    });\r\n  });\r\n\r\nexport default getWeb3;\r\n","import { createAction, handleActions } from \"redux-actions\";\r\nimport {put,call,delay,takeLatest,takeEvery,} from \"@redux-saga/core/effects\";\r\nimport produce from \"immer\";\r\n\r\nimport getWeb3 from \"../getWeb3\";\r\nimport DeedIPFSContract from \"../contracts/DeedIPFSToken.json\";\r\n\r\n\r\nconst CONNWEB=\"conn/CONNWEB\";\r\nconst CONNINSTANCE=\"conn/CONNINSTANCE\"; \r\n\r\nexport const connweb=createAction(CONNWEB,(input)=>input);\r\nexport const conninstance=createAction(CONNINSTANCE,(input)=>input);\r\n\r\nconst SGETWEB3=\"conn/SGETWEB3\";\r\nconst SGETINSTANCE=\"conn/SGETINSTANCE\";\r\n\r\nexport const sgetweb3=createAction(SGETWEB3,(input)=>input);\r\nexport const sgetinstance=createAction(SGETINSTANCE,(input)=>input);\r\n\r\nfunction* takeconn(){\r\n  console.log(\"this\")\r\n  console.log(getWeb3)\r\n  const results = yield call(getWeb3);\r\n  yield console.log(\"왜\",results);\r\n  yield put(connweb(results));\r\n  yield put(sgetinstance(results))\r\n}\r\n\r\nfunction* takeinstance(params){\r\n  console.log(params.payload)\r\n  const contract =yield require(\"@truffle/contract\");\r\n  const deedipfs= yield contract(DeedIPFSContract);\r\n  if(params.payload==null){\r\n   console.log(\"연결안됨\")\r\n  }\r\n  else{\r\n    yield deedipfs.setProvider(params.payload.currentProvider);\r\n    const accounts=yield params.payload.eth.getAccounts()\r\n    const instance= yield deedipfs.deployed()\r\n    yield put(conninstance({shopInstance:instance,myAccount:accounts[0]}))\r\n  }\r\n}\r\n\r\nexport function* waitconn(){\r\n  yield takeEvery(SGETWEB3,takeconn);\r\n  yield takeEvery(SGETINSTANCE,takeinstance);\r\n}\r\n\r\n\r\nconst initialState={\r\n  shopInstance:null,\r\n  myAccount:null,\r\n  web3:null,\r\n};\r\n\r\nconst conn=handleActions(\r\n  {\r\n    [CONNWEB]:(state,{payload:input})=>\r\n    produce(state,(draft)=>{\r\n      draft.web3=input;\r\n    }),\r\n    [CONNINSTANCE]:(state,{payload:input})=>\r\n    produce(state,(draft)=>{\r\n      draft.shopInstance=input.shopInstance;\r\n      draft.myAccount=input.myAccount;\r\n    }),\r\n  },initialState\r\n)\r\n\r\nexport default conn;\r\n\r\n\r\n\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport {sgetweb3} from \"../modules/conn\"\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\n\r\nimport SigninCSS from \"../css/Signin.css\"\r\nimport responsive from \"../css/responsive.css\"\r\n\r\nfunction Signin() {\r\n\r\n    const dispatch = useDispatch();\r\n    const conn = useSelector(state => state.conn);\r\n  useEffect(() => {\r\n    dispatch(sgetweb3());\r\n  \r\n  }, [sgetweb3])\r\n\r\n    return (\r\n        <div className = \"signinContainer\">\r\n          <Header/>\r\n          <section className = \"signinInner\">\r\n            <p>Sign in to your wallet</p>\r\n            <img src = \"/images/metamask.png\"></img>\r\n            <p><button onClick={()=>{window.location.replace(\"/signin\")}}>Get MetaMask</button></p>\r\n          </section>\r\n          <div className = \"footer\"><Footer/></div>\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signin\r\n","import React,{useState} from 'react'\r\nimport Web3 from 'web3';\r\nimport { useHistory } from 'react-router-dom'\r\nimport {useSelector } from \"react-redux\";\r\nimport { setmetaprice } from '../modules/upload';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport productcss from '../css/product.css';\r\n\r\nfunction Product() {\r\n\r\n    const data = useSelector(state => state.marketdata);\r\n    const conn = useSelector(state => state.conn);\r\n\r\n    const history = useHistory()\r\n    const dodo =history.location.pathname;\r\n    const momo=dodo.split('/');\r\n    const compnum=Number(momo[3]);\r\n\r\n    const [bidprice,setbidprice]=useState();\r\n\r\n    const onhandlebuy= async(price,user,num)=>{\r\n      await conn.shopInstance.transferFrom(user,conn.myAccount,num,{\r\n        from: conn.myAccount,\r\n        value: Web3.utils.toWei(String(price),\"ether\")\r\n        })\r\n      }\r\n \r\n\r\n    const onhandlebid =async(bidprice,initprice)=>{\r\n        if(initprice>=bidprice){\r\n            alert(\"입찰시작가보다 더높게 적으세요!\");\r\n        }else{\r\n            await console.log(\"입찰가격\",bidprice)\r\n            \r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"product-container\">\r\n            <Header/>\r\n            <section className=\"product\">\r\n            {\r\n                data.data.map((x)=>x.num==compnum?\r\n                <div className=\"product-inner\">\r\n                    <img src={x.image}></img>\r\n                    <div className=\"product-info\">\r\n                        <div className=\"product-info-left\">\r\n                            <p>Title <span>:</span> </p>\r\n                            <p>Desc <span>:</span> </p>\r\n                        </div>\r\n                        <div className=\"product-info-right\">\r\n                            <p>{x.name}</p>\r\n                            <p>{x.description}</p>\r\n                        </div>\r\n                    </div>\r\n                {\r\n                    x.typeprice==false? \r\n                    <div className=\"product-fixed\">  \r\n                        <div className=\"product-fixed-left\">\r\n                        <p>지정가 <span>:</span></p>\r\n                        <p>발행 날짜 <span>:</span></p>\r\n                        <p>창작자 <span>:</span></p>\r\n                        </div>  \r\n                        <div className=\"product-fixed-right\">\r\n                            <p>{x.price} ETH</p>\r\n                            <p>{x.time}</p>\r\n                            <p>{x.user}</p>\r\n                        <button className=\"product-fixed-btn\" onClick={()=>{onhandlebuy(x.price,x.user,x.num)}}>구매하기</button>\r\n                        </div>\r\n                    </div>\r\n                    :<div className=\"product-oction\">\r\n                        <div className=\"product-oction-left\">\r\n                            <p>입찰가 <span>:</span></p>\r\n                            <p>발행 날짜 <span>:</span></p>\r\n                            <p>종료 시간 <span>:</span></p>\r\n                            <p>창작자 <span>:</span></p>\r\n                            <p>희망 입찰가 <span>:</span></p>\r\n                        </div>\r\n                        <div className=\"product-oction-right\">\r\n                            <p>{x.price}</p>\r\n                            <p>{x.time }</p>\r\n                            <p>{x.endDate}</p>\r\n                            <p>{x.user}</p>\r\n                        <input type=\"text\" placeholder={x.price} value={bidprice} onChange={(e)=>{setbidprice(e.target.value)}}></input>\r\n                        <button className=\"product-oction-btn\" onClick={()=>{onhandlebid(bidprice,x.price)}}>입찰하기</button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                </div>\r\n                :null)\r\n            }\r\n            </section>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React,{useEffect} from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {filtermydata,resetdata} from \"../../modules/marketdata\"\r\n\r\nfunction My({data,conn}) {\r\n    const dispatch=useDispatch();\r\n    let my=data.data.filter(x=>x.user==conn.myAccount);\r\n\r\n    const ddel=(e)=>{   \r\n        console.log(e.target.dataset.name);\r\n        dispatch(filtermydata(e.target.dataset.id));\r\n        conn.shopInstance.burn(e.target.dataset.id,{\r\n            from: conn.myAccount\r\n        });\r\n    }\r\n    \r\n\r\n\r\n    return (\r\n        <div className=\"mypage-inner\">\r\n        <div className=\"mypage-address\">\r\n           <span className=\"address-title\">내주소:</span><span className=\"address-desc\">{conn.myAccount}</span>\r\n           <p>Created Items</p>\r\n        </div>\r\n        <div className=\"myitems-wrapper\">\r\n       {my.map(x=>{\r\n        return(\r\n        \r\n            <div className=\"myitems-inner\">\r\n                <Link to={`/product/${x.user}/${x.num}`}><p className=\"myitems-title\">{x.name}</p><img src={x.image}></img></Link>\r\n                <button onClick={ddel} data-name={x.name} data-id={x.num} className=\"myitem-del-btn\">등록 취소하기</button>\r\n            </div>\r\n        \r\n        )\r\n    })}\r\n    </div>\r\n</div>\r\n    )\r\n}\r\n\r\nexport default My","import React,{useEffect,useState}from 'react'\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport {spushdata,resetdata} from \"../modules/marketdata\"\r\nimport My from '../components/filter/My';\r\n\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\nimport { useHistory } from 'react-router-dom';\r\nimport mypage from '../css/mypage.css';\r\n\r\nfunction Mypage() {\r\n    const dispatch=useDispatch();\r\n    const conn = useSelector(state => state.conn);\r\n    const data = useSelector(state => state.marketdata);\r\n    const history=useHistory();\r\n    const [init,setinit]=useState(false);\r\n    \r\n    const handleGet = async() => {\r\n        const length = await conn.shopInstance.getLength();\r\n        console.log(length);\r\n        if(length>0){\r\n            setinit(false);\r\n        for(let i = 0; i < length; i++){\r\n            const ipfsdata = await conn.shopInstance.getAllNFTs(i);\r\n            dispatch(spushdata({ipfsdata:ipfsdata,num:i}));\r\n        }\r\n        }\r\n        else{\r\n            setinit(true);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(conn.shopInstance==null){\r\n            alert(\"로그인후 사용가능!\")\r\n            history.push(\"/signin\");\r\n        }\r\n        else{\r\n            dispatch(resetdata());\r\n            handleGet();\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n        {\r\n             init==false?  \r\n             <div className=\"mypage-container\">\r\n             <Header/>\r\n             <section className=\"mypage\">\r\n               <My data={data} conn={conn}></My>\r\n             </section>\r\n             <Footer/>\r\n         </div>\r\n     :\r\n\r\n     <div className=\"mypage-container\">\r\n     <Header/>\r\n     <section className=\"mypage\">\r\n     <div>등록하신 작품이 없습니다</div>\r\n     </section>\r\n     <Footer/>\r\n        </div>      \r\n     \r\n        }\r\n     </div>\r\n    )\r\n}\r\n\r\nexport default Mypage\r\n","import React from 'react'\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Create from './container/Create';\r\nimport Home from './container/Home';\r\nimport Market from './container/Market';\r\nimport Signin from './components/Signin';\r\nimport Product from './components/Product';\r\nimport Mypage from './container/Mypage';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n       <BrowserRouter>\r\n        <Switch>\r\n         \r\n          <Route path=\"/\" exact component={Home}></Route>\r\n          <Route exact path=\"/signin\" component={Signin} />\r\n          <Route exact path=\"/create\" component={Create} />\r\n          <Route exact path=\"/market\" component={Market} />\r\n          <Route exact path=\"/my\" component={Mypage} />\r\n          <Route exact path=\"/product/:key1?/:key2?\" component={Product}/>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { combineReducers } from 'redux';\r\nimport upload from '../modules/upload'\r\n\r\nimport { all } from '@redux-saga/core/effects';\r\nimport conn,{waitconn} from '../modules/conn';\r\n import { persistReducer } from \"redux-persist\";\r\n import storage from \"redux-persist/lib/storage\";\r\nimport marketdata,{waitmarketdata} from '../modules/marketdata';\r\n  const persistConfig = {\r\n    key: \"root\",\r\n    // localStorage에 저장합니다.\r\n    storage,\r\n    // auth, board, studio 3개의 reducer 중에 auth reducer만 localstorage에 저장합니다.\r\n    whitelist: [\"login\"]\r\n    // blacklist -> 그것만 제외합니다\r\n  };\r\n\r\nconst rootreducer = combineReducers({\r\n    conn,upload,marketdata\r\n\r\n});\r\n\r\nexport function* rootsaga() {\r\n    yield all([waitconn(),waitmarketdata()]);\r\n}\r\nexport default persistReducer(persistConfig, rootreducer);\r\n","\r\nimport * as serviceWorker from './serviceWorker';\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport rootreducer, { rootsaga } from \"./combine/root\";\r\nimport { Provider } from \"react-redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport { persistStore } from \"redux-persist\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nconst logger = createLogger();\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(\r\n  rootreducer,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\r\n);\r\n\r\nsagaMiddleware.run(rootsaga);\r\nconst persistor = persistStore(store);\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { createAction,handleActions } from \"redux-actions\";\r\nimport {put,call,takeEvery} from\"@redux-saga/core/effects\";\r\nimport produce from \"immer\";\r\n\r\nconst POND= \"upload/POND\";\r\nconst FILES= \"upload/FILES\";\r\nconst BUFFER=\"upload/BUFFER\";\r\nconst IPFSMETAHASH=\"upload/IPFSMETAHASH\";\r\nconst IPFSHASH=\"upload/IPFSHASH\";\r\nconst RESET=\"upload/RESET\";\r\nconst FLAG=\"upload/FLAG\";\r\nconst METANAME=\"upload/METANAME\";\r\nconst METADESC=\"upload/METADESC\";\r\nconst METAHASH=\"upload/METAHASH\";\r\nconst METAPRICE=\"upload/METAPRICE\";\r\nconst TYPEPRICE=\"upload/TYPEPRICE\";\r\nconst RESETUPLOAD=\"upload/RESETUPLOAD\";\r\n\r\nexport const setpond=createAction(POND,(input)=>input);\r\nexport const setfiles=createAction(FILES,(input)=>input);\r\nexport const setbuffer=createAction(BUFFER,(input)=>input);\r\nexport const setipfsMetaHash=createAction(IPFSMETAHASH,(input)=>input);\r\nexport const setipfsHash=createAction(IPFSHASH,(input)=>input);\r\nexport const uploadreset=createAction(RESET,(input)=>input);\r\nexport const setflag=createAction(FLAG,(input)=>input);\r\nexport const setmetaname=createAction(METANAME,(input)=>input);\r\nexport const setmetadesc=createAction(METADESC,(input)=>input);\r\nexport const setmetahash=createAction(METAHASH,(input)=>input);\r\nexport const setmetaprice=createAction(METAPRICE,(input)=>input);\r\nexport const setmetatypeprice=createAction(TYPEPRICE,(input)=>input);\r\nexport const resetupload=createAction(RESETUPLOAD,(input)=>input);\r\n\r\nconst initialState={\r\n    ipfsHash:null,\r\n    ipfsMetaHash: null,\r\n    buffer: '',\r\n    files: [],\r\n    imageUrl: null,\r\n    flag: false,\r\n    pond:null,\r\n    metaName:\"\",\r\n    metaDesc:\"\",\r\n    metaHash:\"\",\r\n    metatypeprice:false,\r\n    metaprice:0, \r\n}\r\n\r\nconst upload=handleActions({\r\n    [POND]:(state,{payload:input})=>\r\n    produce(state,(draft)=>{\r\n        draft.pond=input;\r\n    }),\r\n    [FILES]:(state,{payload:input})=>\r\n    produce(state,(draft)=>{\r\n    \r\n        draft.files=input;\r\n    }),\r\n    [BUFFER]:(state,{payload:input})=>\r\n    produce(state,(draft)=>{\r\n        draft.buffer=input;\r\n    }),\r\n    [IPFSMETAHASH]:(state,{payload:input})=>\r\n    produce(state,(draft)=>{\r\n       \r\n        draft.ipfsMetaHash=input;\r\n    }),\r\n    [IPFSHASH]:(state,{payload:input})=>\r\n    produce(state,(draft)=>{\r\n  \r\n        draft.ipfsHash=input;\r\n    }),\r\n    [RESET]:(state,{payload:input})=>\r\n    produce(state,(draft)=>{\r\n\r\n        draft.ipfsMetaHash=input.ipfsMetaHash;\r\n        draft.imageUrl=input.imageUrl;\r\n        draft.flag=input.flag;\r\n    }),\r\n    [FLAG]:(state,{payload:input})=>\r\n    produce(state,(draft)=>{\r\n        draft.flag=input;\r\n    }),\r\n    [METANAME]:(state,{payload:input})=>\r\n    produce(state,(draft)=>{\r\n        draft.metaName=input;\r\n    }),\r\n    [METADESC]:(state,{payload:input})=>\r\n    produce(state,(draft)=>{\r\n        draft.metaDesc=input;\r\n    }),\r\n    [METAHASH]:(state,{payload:input})=>\r\n    produce(state,(draft)=>{\r\n        draft.metaHash=input;\r\n    }),\r\n    [METAPRICE]:(state,{payload:input})=>\r\n    produce(state,(draft)=>{\r\n        draft.metaprice=input;\r\n    }),\r\n    [TYPEPRICE]:(state,{payload:input})=>\r\n    produce(state,(draft)=>{\r\n        draft.metatypeprice=input;\r\n    }),\r\n    [RESETUPLOAD]:(state,{payload:input})=>\r\n    produce(state,(draft)=>{\r\n        \r\n        draft.ipfsMetaHash=null;\r\n        draft.imageUrl=null;\r\n        draft.metaName=\"\";\r\n        draft.metaDesc=\"\";\r\n        draft.files=[];\r\n        draft.buffer='';\r\n        draft.ipfsMetaHash='';\r\n        draft.ipfsHash='';\r\n        draft.metaHash='';\r\n        draft.metaprice='';\r\n    }),\r\n\r\n\r\n    \r\n},initialState)\r\n\r\nexport default upload;","import React,{useState,useEffect, useRef} from 'react'\r\nimport {FilePond, registerPlugin } from 'react-filepond';\r\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\r\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css';\r\nimport 'filepond/dist/filepond.min.css';\r\nimport logo from '../images/ipfs-logo.png';\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport '../css/filepond-custom.css';\r\nimport ipfs from '../utils/ipfs';\r\nimport { Link,useHistory } from 'react-router-dom';\r\nimport create from '../css/Create.css';\r\nimport { BiUserCircle , BiWallet } from \"react-icons/bi\";\r\nimport {FaShopify} from \"react-icons/fa\";\r\nimport {GoDiffAdded} from \"react-icons/go\";\r\n\r\n// import '../css/bootstrap/css/bootstrap.min.css';\r\nimport Createupload from '../components/Createupload';\r\nimport {setpond,setfiles,setbuffer,setipfsMetaHash,setipfsHash,uploadreset} from '../modules/upload'\r\n\r\nregisterPlugin(FilePondPluginImagePreview);\r\n\r\nfunction Create() {\r\n    const dispatch = useDispatch();\r\n    const upload = useSelector(state => state.upload);\r\n    const conn = useSelector(state => state.conn);\r\n    const test = useRef();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if(conn.shopInstance==null){\r\n            alert(\"로그인후 사용가능!\")\r\n            history.push(\"/signin\");\r\n        }\r\n        document.addEventListener(\"FilePond:addfile\", readFile);\r\n        console.log(\"파일읽기\",readFile);\r\n    }, [])\r\n\r\n\r\n    const readFile = () => {\r\n       \r\n        if (test.current != null) {\r\n            console.log(\"여기여기\")\r\n            const file = test.current.props.children[0].props.src; // single file\r\n            let reader = new window.FileReader();\r\n            console.log(\"파일읽기2\",reader);\r\n            reader.readAsArrayBuffer(file);\r\n            reader.onloadend = () => fileToBuffer(reader);\r\n        }\r\n        else{\r\n            console.log(\"역시\")\r\n        }\r\n    };\r\n\r\n    \r\n    const fileToBuffer = async (reader) => {\r\n        //buffering ready to upload to IPFS\r\n        const buffer = await Buffer.from(reader.result);\r\n        dispatch(setbuffer(buffer));\r\n\r\n    }\r\n\r\n    const handleUpload = async () => {\r\n        if (upload.files.length > 0) {\r\n            dispatch(setipfsHash('Uploading...'));\r\n            console.log(\"할거지\",upload.buffer);\r\n            await ipfs.add(upload.buffer, (err, ipfsHash) => {\r\n                console.log(\"안오지\");\r\n                console.log(err, ipfsHash);\r\n                //setState by setting ipfsHash to ipfsHash[0].hash\r\n                dispatch(setipfsHash(ipfsHash[0].hash));\r\n            });\r\n        }\r\n        else{\r\n            console.log(\"역시\")\r\n        }\r\n    }\r\n\r\n    const handleMint = async () => {\r\n        if (upload.ipfsMetaHash !== null) {\r\n            await conn.shopInstance.mint(upload.ipfsMetaHash,{\r\n                from: conn.myAccount,\r\n            });\r\n            console.log('민트할때나오는거',conn.shopInstance.mint)\r\n            history.push(\"/\")\r\n        }\r\n    }\r\n\r\n    const handleGet = async() => {\r\n        /*\r\n         * 배열 가져오기 \r\n         * getAllNFTs\r\n         */\r\n        const length = await conn.shopInstance.getLength();\r\n        console.log(length);\r\n        for(let i = 0; i < length; i++){\r\n            const test = await conn.shopInstance.getAllNFTs(i);\r\n            console.log(test, i);\r\n        }\r\n    }\r\n\r\n    const handleReset = () => {\r\n        dispatch(uploadreset({\r\n            ipfsMetaHash: null,\r\n            imageUrl: null,\r\n            flag: false\r\n        }));\r\n        test.current.removeFile();\r\n    }\r\n\r\n    const handleIpfsMetaHash = (ipfsMetaHash) => {\r\n        dispatch(setipfsMetaHash(ipfsMetaHash));\r\n    }\r\n    \r\n//     const handleRead = async()=>{\r\n//         const handleRead = await conn.shopInstance.readAllAddresses();\r\n//         console.log(handleRead, '주소나왕!!!');\r\n//     }\r\n//     const dd=\"QmehFe5ghQnsdoFepxpzG5sAFLtneGYrjmM3mNyLygnr9B\";\r\n//    const handlemetahash=async()=>{\r\n//     const dododo=  await axios.get( \"https://gateway.ipfs.io/ipfs/QmehFe5ghQnsdoFepxpzG5sAFLtneGYrjmM3mNyLygnr9B\");\r\n//     console.log(\"sibal\",dododo);    \r\n//     }\r\n\r\n    return (\r\n        <div className=\"create-container\">\r\n            {/*header start */}\r\n          <header>\r\n            <div className=\"create-header-inner\">\r\n              <div className=\"create-logo\">\r\n                <Link to=\"/\"><img src=\"/images/logo-white.png\"></img></Link>\r\n              </div>\r\n              <div className='create-gnb'>\r\n                <Link to=\"/Create\" ><GoDiffAdded className=\"gnb-1\"/></Link>\r\n                <Link to=\"/Market\" ><FaShopify className=\"gnb-2\"/></Link>\r\n                <Link to=\"/Mypage\" ><BiUserCircle className=\"gnb-3\"/></Link>\r\n                <Link to=\"/Signin\" ><BiWallet className=\"gnb-4\"/></Link>\r\n              </div>\r\n            </div>\r\n          </header>\r\n          <section className=\"create-welcome\">\r\n            <div className=\"create-welcome-heading\">\r\n            <h1>\r\n              Make Your Own NFT On U1L.\r\n            </h1>\r\n            <FilePond ref={test} className=\"heading-upload\"\r\n                              onupdatefiles={(fileItems) => {\r\n                                  // Set current file objects to sta\r\n                                  dispatch(setfiles(\r\n                                    fileItems.map(fileItem => fileItem.file)\r\n                              ));\r\n                              }}>\r\n                            {/* > */}\r\n                        {upload.files.map(file => (\r\n                            <input type=\"file\" key={file} src={file} />\r\n                        ))}\r\n                  \r\n            </FilePond>\r\n            </div>\r\n            <div className=\"image-hash\">\r\n                {upload.imageUrl && <img src={upload.imageUrl} className=\"img-view\" alt=\"ipfs-image\" />} {upload.ipfsHash}\r\n            </div>\r\n                <div className=\"create-welcome-btns\">\r\n                    \r\n                {/* ERC721 토큰의 메타 정보에 해당하는 JSON 파일을 IPFS에 업로드 */}\r\n                    <button onClick={handleUpload} className=\"btn-gethash\">get hash</button>\r\n                <Createupload onChangeIpfsMetaHash={handleIpfsMetaHash} upload={upload} conn={conn}/>\r\n                <div>\r\n                    <button onClick={handleMint}>Upload</button> \r\n                    <button href=\"#\" onClick={handleReset}>Reset</button>\r\n                    {/* <button onClick={handleGet}>콘솔에 발행한 NFT목록</button> */}\r\n                    {/* <button onClick={handleRead}> 주소나왕!!</button>\r\n                    <button onClick={handlemetahash}>메타나와! </button> */}\r\n\r\n\r\n                </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Create\r\n","import React,{useRef,useState} from 'react'\r\nimport { useDispatch, } from \"react-redux\";\r\nimport {setflag,setmetaname,setmetadesc,setmetahash,setmetaprice,setmetatypeprice,setmetatenddate}from '../modules/upload';\r\nimport { IPFS_URL } from \"../utils/constants\";\r\nimport ipfs from \"../utils/ipfs\";\r\nimport moment from 'moment';\r\nimport 'moment/locale/ko';\r\nimport DatePicker,{registerLocale} from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport { addDays } from 'date-fns';\r\nimport ko from 'date-fns/locale/ko';\r\nimport create from \"../css/Create.css\";\r\n\r\nregisterLocale(\"ko\",ko);\r\n\r\nfunction Createupload({onChangeIpfsMetaHash,upload,conn}) {\r\n    const dispatch = useDispatch();\r\n    const [endDate, setEndDate] = useState(new Date());\r\n \r\n\r\n    const handleUploadJson = async () => {\r\n        // const nowTime = moment().format('YYYY-MM-DD HH:mm:ss');\r\n        const nowTime = moment().format('YYYY. MM. DD.');\r\n        const name = upload.metaName;\r\n        const desc = upload.metaDesc;\r\n        const hash = upload.metaHash;\r\n        const time = nowTime;\r\n        const user = conn.myAccount;\r\n        const price= upload.metaprice;\r\n        const typeprice= upload.metatypeprice;\r\n    //    const endate=endDate.setHours(endDate.getHours()+9);\r\n    //    const enddate = new Date(endate);\r\n        const enddate=endDate;\r\n        if (name !== '' && desc !== '' && hash !== '') {\r\n            dispatch(setflag(true));\r\n\r\n            //////////////////////////////////////////\r\n            let metaData = {};\r\n            metaData[\"name\"] = name;\r\n            metaData[\"description\"] = desc;\r\n            metaData[\"image\"] = `${IPFS_URL}${hash}`;\r\n            metaData[\"time\"] = time;\r\n            metaData[\"user\"] = user;\r\n            metaData[\"price\"]=price;\r\n            metaData[\"typeprice\"]=typeprice;\r\n            metaData[\"endDate\"] = new Date(enddate.setHours(enddate.getHours())).toLocaleString();\r\n\r\n            const buffer = await Buffer.from(JSON.stringify(metaData));\r\n            // IPFS에 업로드하고 ERC721Metadata.tokenURI 메소드를 통해 조회될 수 있도록 토큰을 mint 할 때 메타정보를 저장한다.\r\n            const ipfsMetaHash = await ipfs.add(buffer);\r\n            console.log(ipfsMetaHash,'메타해쉬');\r\n            console.log(user,'창작자')\r\n            console.log(time,'올리는시간');\r\n            console.log(enddate, '입찰종료일')\r\n            dispatch(setflag(false));  \r\n            onChangeIpfsMetaHash(ipfsMetaHash[0].hash);\r\n        }else{\r\n            alert(\"모두 입력하세요\")\r\n        }\r\n    }\r\n\r\n    const test=(e)=>{\r\n        console.log(e)\r\n        setEndDate(e);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"create-welcome-upload-wrapper\">\r\n          <div className=\"create-welcome-upload-inner\">\r\n                <div className=\"create-welcome-upload-inner-left\">\r\n                    <p>Item Name</p>\r\n                    <p>Image hash</p>\r\n                    <p>Description</p>\r\n                </div>\r\n                <div className=\"create-welcome-upload-inner-right\">\r\n                    <p><input type=\"text\" id=\"metaName\" value={upload.metaName} onChange={(e)=>{dispatch(setmetaname(e.target.value))}} placeholder={\"이름을 입력하세요\"}/></p>\r\n                    <p><input type=\"text\" id=\"metaHash\" value={upload.metaHash} onChange={(e)=>{dispatch(setmetahash(e.target.value))}} placeholder={\"해쉬값을 입력하세요\"}/></p>\r\n                    <p><input type=\"text\" id=\"metaDesc\" value={upload.metaDesc} onChange={(e)=>{dispatch(setmetadesc(e.target.value))}} placeholder={\"설명을 입력하세요\"} /></p>\r\n\r\n                </div>\r\n          </div>    \r\n          <div className=\"oction-inner\">\r\n\r\n              {/* 지정가 경매가 변환 */}\r\n                <button onClick={()=>{dispatch(setmetatypeprice(!upload.metatypeprice))}}>{upload.metatypeprice==false?\"지정가\":\"경매시작가\"}</button>\r\n                {upload.metatypeprice==false?\r\n                <div>\r\n                    <div>\r\n                        unChangePrice\r\n                    </div>\r\n                    <div >\r\n                        <input type=\"text\" id=\"unchangeprice\" value={upload.metaprice} onChange={(e)=>{dispatch(setmetaprice(e.target.value))}} placeholder={\"지정가\"}/>\r\n                    </div>\r\n                </div>: \r\n                <div>\r\n                    <div>\r\n                        auctionPrice\r\n                    </div>\r\n\r\n                    <div >\r\n                        <input type=\"text\" id=\"auctionprice\" value={upload.metaprice} onChange={(e)=>{dispatch(setmetaprice(e.target.value))}} placeholder={\"경매시작가\"}/>\r\n                    </div>\r\n                   \r\n                    <div>종료날짜\r\n                        <DatePicker\r\n                        id=\"datePicker\"\r\n                        name=\"day1\"\r\n                        locale=\"ko\"\r\n                        selected={endDate}\r\n                        closeOnScroll={true}\r\n                        minDate={new Date()}\r\n                        maxDate={addDays(new Date(),7)}\r\n                        dateFormat = \"yyyy-MM-dd\"\r\n                        // popperModifiers={{preventOverflow:{enabled:true}}}\r\n                        // onChange={(date)=> setEndDate(date)}\r\n                        placeholderText=\"종료일을 선택하세요\"\r\n                        // value={endDate}\r\n                        // value={ upload.metatenddate}\r\n                        // onChange={(e)=>{dispatch(setmetaprice(e))}}\r\n                        onChange={(e)=>{test(e)}}\r\n                        />\r\n                    </div>\r\n                </div>}\r\n          </div>   \r\n                \r\n           \r\n        \r\n\r\n            <div>\r\n                <div>\r\n                    <button  onClick={handleUploadJson}>\r\n                        JSON형식으로 데이터를 업로드 \r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div style={{marginTop: '10px', marginBottom: '10px'}}>\r\n                {(upload.flag)\r\n                    ?<div>-로딩중-</div>\r\n                    :upload.ipfsMetaHash\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Createupload","const IPFS_URL =  \"https://ipfs.infura.io/ipfs/\";;\r\n\r\nexport {\r\n    IPFS_URL\r\n}\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/ipfs-logo.9658fd70.png\";"],"sourceRoot":""}